405. Convert a Number to Hexadecimal My SubmissionsBack To Contest
User Accepted: 399
User Tried: 435
Total Accepted: 424
Total Submissions: 987
Difficulty: Easy
Given an integer, write an algorithm to convert it to hexadecimal. For negative integer, twoâ€™s complement method is used.

Note:

All letters in hexadecimal (a-f) must be in lowercase.
The hexadecimal string must not contain extra leading 0s. If the number is zero, it is represented by a single zero character '0'; otherwise, the first character in the hexadecimal string will not be the zero character.
The given number is guaranteed to fit within the range of a 32-bit signed integer.
You must not use any method provided by the library which converts/formats the number to hex directly.
Example 1:

Input:
26

Output:
"1a"
Example 2:

Input:
-1

Output:
"ffffffff"




 public String toHex(int num) {
        if (num == 0){
            return "0";
        }
        StringBuilder sb = new StringBuilder();
        while (num != 0){
            int cur = num & 15;
            if (cur >= 0 && cur <= 9){
                sb.insert(0, (char)(cur + '0'));
            } else {
                sb.insert(0, (char)(cur - 10 + 'a'));
            }
            
            num = num >>> 4;
        }
        String result = sb.toString();
        int len = result.length();
        int idx = 0;
        while (idx < len && result.charAt(idx) == '0'){
            idx++;
        }
        if (idx == len){
            return "0";
        } else {
            return result.substring(idx);
        }
    }
