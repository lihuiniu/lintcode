406. Queue Reconstruction by Height My SubmissionsBack To Contest
User Accepted: 247
User Tried: 300
Total Accepted: 256
Total Submissions: 614
Difficulty: Medium
Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue.

Note:
The number of people is less than 1,100.

Example

Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]


public class Solution {
    public int[][] reconstructQueue(int[][] people) {
        int[][] result = new int[people.length][2];
        List<Integer> tmp = new ArrayList<Integer>();
        for (int i = 0; i <people.length; i++){
            tmp.add(i);
        }
        
        Arrays.sort(people, new Comparator<int[]>(){
            public int compare(int[] a, int[] b){
                if (a[0] == b[0]){
                    if (a[1] == b[1]){
                        return 0;
                    }
                    return a[1] >b[1] ? 1 : -1;
                }
                return a[0] > b[0] ? -1 : 1 ;
            }
        });
        
        for (int i = people.length - 1; i > -1; i--){
            result[tmp.remove(people[i][1])] = people[i];
        }
        return result;
    }
}
